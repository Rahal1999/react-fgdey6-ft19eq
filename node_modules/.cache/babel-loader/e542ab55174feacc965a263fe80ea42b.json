{"ast":null,"code":"var arrowWidth = 10;\nvar arrowHeight = 10;\n/**\n * @hidden\n */\n\nexport var getLeftPosition = function (left, elementWidth, targetElement, anchorElement, position) {\n  switch (position) {\n    case 'bottom':\n      return anchorElement === 'pointer' ? left - elementWidth / 2 : targetElement.left - elementWidth / 2 + targetElement.width / 2;\n\n    case 'left':\n      return anchorElement === 'pointer' ? left - elementWidth - arrowWidth : targetElement.left - elementWidth - arrowWidth;\n\n    case 'right':\n      return anchorElement === 'pointer' ? left + arrowWidth : targetElement.right + arrowWidth;\n\n    case 'top':\n      return anchorElement === 'pointer' ? left - elementWidth / 2 : targetElement.left - elementWidth / 2 + targetElement.width / 2;\n\n    default:\n      if (anchorElement === 'pointer') {\n        return left < window.screen.availWidth / 2 ? left - arrowWidth : left - elementWidth + arrowWidth;\n      } else {\n        return left < window.screen.availWidth / 2 ? targetElement.left : targetElement.right - elementWidth;\n      }\n\n  }\n};\n/**\n * @hidden\n */\n\nexport var getTopPosition = function (top, targetElement, elementHeight, anchorElement, position) {\n  switch (position) {\n    case 'bottom':\n      return anchorElement === 'pointer' ? top + arrowHeight : targetElement.bottom + arrowHeight;\n\n    case 'left':\n      return anchorElement === 'pointer' ? top - elementHeight / 2 : targetElement.top - elementHeight / 2 + targetElement.height / 2;\n\n    case 'right':\n      return anchorElement === 'pointer' ? top - elementHeight / 2 : targetElement.top - elementHeight / 2 + targetElement.height / 2;\n\n    case 'top':\n      return anchorElement === 'pointer' ? top - elementHeight - arrowHeight : targetElement.top - elementHeight - arrowHeight;\n\n    default:\n      if (anchorElement === 'pointer') {\n        return top < window.innerHeight / 2 ? top + arrowWidth : top - elementHeight - arrowWidth;\n      } else {\n        return top < window.innerHeight / 2 ? targetElement.bottom + arrowHeight : targetElement.top - elementHeight - arrowHeight;\n      }\n\n  }\n};\n/**\n * @hidden\n */\n\nexport var getDomRect = function (currentTarget) {\n  if (currentTarget !== null) {\n    return currentTarget.getBoundingClientRect();\n  }\n\n  return document.body.getBoundingClientRect();\n};\n/**\n * @hidden\n */\n\nexport var toolTipSelectors = ['k-tooltip-content', 'k-animation-container', 'k-tooltip', 'k-tooltip-title', 'k-tooltip k-tooltip-closable', 'k-icon k-i-close'];\n/**\n * @hidden\n */\n\nexport var isTooltipElement = function (element) {\n  if (element === null) {\n    return false;\n  }\n\n  var node = element;\n\n  while (node) {\n    if (node !== null && node.className === 'k-tooltip') {\n      return true;\n    }\n\n    node.parentNode !== null ? node = node.parentNode : node = false;\n  }\n\n  return toolTipSelectors.filter(function (t) {\n    return t === element.className;\n  }).length > 0;\n};","map":null,"metadata":{},"sourceType":"module"}