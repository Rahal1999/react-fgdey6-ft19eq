{"ast":null,"code":"var __extends = this && this.__extends || function () {\n  var extendStatics = function (d, b) {\n    extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    };\n\n    return extendStatics(d, b);\n  };\n\n  return function (d, b) {\n    extendStatics(d, b);\n\n    function __() {\n      this.constructor = d;\n    }\n\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n\nvar __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n\n      for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n    }\n\n    return t;\n  };\n\n  return __assign.apply(this, arguments);\n};\n\nvar __rest = this && this.__rest || function (s, e) {\n  var t = {};\n\n  for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) if (e.indexOf(p[i]) < 0) t[p[i]] = s[p[i]];\n  return t;\n};\n\nimport * as React from 'react';\nimport * as ReactDOM from 'react-dom';\nimport * as PropTypes from 'prop-types';\nimport { dispatchEvent } from '@progress/kendo-react-common';\nimport { getLeftPosition, getTopPosition, getDomRect, isTooltipElement } from './utils';\n\nvar Tooltip =\n/** @class */\nfunction (_super) {\n  __extends(Tooltip, _super);\n\n  function Tooltip() {\n    var _this = _super !== null && _super.apply(this, arguments) || this;\n    /**\n     * @hidden\n     */\n\n\n    _this.state = {\n      targetElement: null,\n      open: false\n    };\n    _this.title = '';\n    _this.top = 0;\n    _this.left = 0;\n    /**\n     * The method is used on the MouseOut event to hide the Tooltip.\n     */\n\n    _this.handleMouseOut = function (event) {\n      var element = document.elementFromPoint(event.clientX, event.clientY);\n\n      if (isTooltipElement(element)) {\n        return;\n      }\n\n      dispatchEvent(_this.props.onClose, event, _this, undefined);\n\n      _this.setState({\n        targetElement: null,\n        open: false\n      });\n    };\n    /**\n     * The method is used on the MouseOver event to show the Tooltip.\n     */\n\n\n    _this.handleMouseOver = function (event) {\n      var target = event.target;\n\n      if (!_this.isVisible(target) || isTooltipElement(target) || target === _this.state.targetElement) {\n        return;\n      }\n\n      _this.showToolTip(event);\n\n      dispatchEvent(_this.props.onOpen, event, _this, undefined);\n    };\n\n    _this.handleBodyMousemove = function (event) {\n      _this.top = event.clientY;\n      _this.left = event.clientX;\n    };\n\n    _this.position = function (element) {\n      var domRect = getDomRect(_this.state.targetElement);\n      var left = getLeftPosition(_this.left, element.offsetWidth, domRect, _this.props.anchorElement, _this.props.position);\n      var top = getTopPosition(_this.top, domRect, element.offsetHeight, _this.props.anchorElement, _this.props.position);\n      return {\n        left: left,\n        top: top\n      };\n    };\n\n    _this.getTitle = function (element) {\n      while (element) {\n        if (element.title || element.titleExpando) {\n          return element.title || element.titleExpando;\n        }\n\n        element = _this.props.parentTitle && element.parentElement || null;\n      }\n\n      return '';\n    };\n\n    _this.calloutClassName = function () {\n      switch (_this.props.position) {\n        case 'bottom':\n          return 'k-callout k-callout-n';\n\n        case 'left':\n          return 'k-callout k-callout-e';\n\n        case 'right':\n          return 'k-callout k-callout-w';\n\n        case 'top':\n          return 'k-callout k-callout-s';\n\n        default:\n          return _this.top < window.innerHeight / 2 ? 'k-callout k-callout-n' : 'k-callout k-callout-s';\n      }\n    };\n\n    return _this;\n  }\n  /**\n   * @hidden\n   */\n\n\n  Tooltip.prototype.componentDidMount = function () {\n    if (document) {\n      document.body.addEventListener('mousemove', this.handleBodyMousemove);\n    }\n  };\n  /**\n   * @hidden\n   */\n\n\n  Tooltip.prototype.componentWillUnmount = function () {\n    clearTimeout(this.openTimeout);\n    this.openTimeout = undefined;\n\n    if (document) {\n      document.body.removeEventListener('mousemove', this.handleBodyMousemove);\n    }\n  };\n  /**\n   * @hidden\n   */\n\n\n  Tooltip.prototype.render = function () {\n    var _this = this;\n\n    if (this.props.children) {\n      var _a = this.props,\n          children = _a.children,\n          options = __rest(_a, [\"children\"]);\n\n      var tooltip_1 = null;\n      return React.createElement(\"div\", {\n        onMouseOver: function (event) {\n          if (tooltip_1) {\n            tooltip_1.handleMouseOver(event);\n          }\n        },\n        onMouseOut: function (event) {\n          if (tooltip_1) {\n            tooltip_1.handleMouseOut(event);\n          }\n        }\n      }, React.createElement(Tooltip, __assign({\n        ref: function (el) {\n          return tooltip_1 = el;\n        }\n      }, options)), children);\n    }\n\n    return this.state.targetElement && this.title && document && ReactDOM.createPortal(React.createElement(\"div\", {\n      ref: function (el) {\n        if (!el) {\n          return;\n        }\n\n        var position = _this.position(el);\n\n        el.style.left = position.left + 'px';\n        el.style.top = position.top + 'px';\n      },\n      className: 'k-animation-container k-animation-container-fixed k-animation-container-shown' + (this.props.className ? ' ' + this.props.className : ''),\n      tabIndex: 0\n    }, React.createElement(\"div\", {\n      className: \"k-tooltip\",\n      style: {\n        position: 'relative'\n      }\n    }, React.createElement(\"div\", {\n      className: \"k-tooltip-content\"\n    }, this.props.content && React.createElement(this.props.content, {\n      title: this.title,\n      target: this.state.targetElement\n    }) || this.title), this.props.showCallout && React.createElement(\"div\", {\n      ref: function (el) {\n        if (!el) {\n          return;\n        }\n\n        el.className = _this.calloutClassName();\n\n        if (_this.props.position === 'auto') {\n          _this.left < window.screen.availWidth / 2 ? el.style.left = '25%' : el.style.left = '75%';\n        }\n      }\n    }))), document.body);\n  };\n\n  Tooltip.prototype.showToolTip = function (event) {\n    var _this = this;\n\n    var target = event.target;\n    clearTimeout(this.openTimeout);\n    this.title = this.getTitle(event.target);\n\n    if (this.title) {\n      target.titleExpando = target.titleExpando || target.title;\n      target.title = '';\n    }\n\n    if (!this.props.openDelay) {\n      this.setState({\n        targetElement: target,\n        open: true\n      });\n    } else {\n      this.openTimeout = setTimeout(function () {\n        _this.setState({\n          targetElement: target,\n          open: true\n        });\n      }, this.props.openDelay);\n    }\n  };\n\n  Tooltip.prototype.isVisible = function (element) {\n    return !this.props.filter || this.props.filter(element);\n  };\n  /**\n   * @hidden\n   */\n\n\n  Tooltip.propTypes = {\n    anchorElement: PropTypes.oneOf(['pointer', 'target']),\n    content: PropTypes.func,\n    filter: PropTypes.func,\n    openDelay: PropTypes.number,\n    position: PropTypes.oneOf(['right', 'left', 'top', 'bottom', 'auto'])\n  };\n  Tooltip.defaultProps = {\n    anchorElement: 'pointer',\n    openDelay: 400,\n    position: 'auto',\n    showCallout: true,\n    parentTitle: false\n  };\n  return Tooltip;\n}(React.PureComponent);\n\nexport { Tooltip };","map":null,"metadata":{},"sourceType":"module"}