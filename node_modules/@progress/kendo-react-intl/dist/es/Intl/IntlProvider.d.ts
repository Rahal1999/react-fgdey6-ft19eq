import * as React from 'react';
import * as PropTypes from 'prop-types';
import { IntlService } from './IntlService';
import { IntlProviderProps } from './IntlProviderProps';
/**
 * A React component which provides an internationalization service. Expects a locale string as a property of the component.
 */
export default class IntlProvider extends React.Component<IntlProviderProps, {}> {
    /**
     * @hidden
     */
    static propTypes: {
        locale: PropTypes.Requireable<string>;
    };
    /**
     * @hidden
     */
    static childContextTypes: {
        kendoIntlService: PropTypes.Requireable<object>;
    };
    /**
     * Returns an internationalization service. The method is suitable for overriding when you implement custom internationalization behavior.
     */
    getIntlService(): IntlService;
    /**
     * @hidden
     */
    getChildContext(): {
        kendoIntlService: IntlService;
    };
    /**
     * @hidden
     */
    render(): string | number | boolean | {} | React.ReactElement<any, string | ((props: any) => React.ReactElement<any, string | any | (new (props: any) => React.Component<any, any, any>)>) | (new (props: any) => React.Component<any, any, any>)> | React.ReactPortal;
}
