import * as React from 'react';
import * as PropTypes from 'prop-types';
import { TooltipProps } from './TooltipProps';
/**
 * @hidden
 */
interface TooltipState {
    targetElement: HTMLElement | null;
    open: boolean;
}
export declare class Tooltip extends React.PureComponent<TooltipProps, TooltipState> {
    /**
     * @hidden
     */
    static propTypes: {
        anchorElement: PropTypes.Requireable<string>;
        content: PropTypes.Requireable<(...args: any[]) => any>;
        filter: PropTypes.Requireable<(...args: any[]) => any>;
        openDelay: PropTypes.Requireable<number>;
        position: PropTypes.Requireable<string>;
    };
    static defaultProps: {
        anchorElement: string;
        openDelay: number;
        position: string;
        showCallout: boolean;
        parentTitle: boolean;
    };
    /**
     * @hidden
     */
    readonly state: TooltipState;
    private title;
    private top;
    private left;
    private openTimeout;
    /**
     * @hidden
     */
    componentDidMount(): void;
    /**
     * @hidden
     */
    componentWillUnmount(): void;
    /**
     * The method is used on the MouseOut event to hide the Tooltip.
     */
    handleMouseOut: (event: any) => void;
    /**
     * The method is used on the MouseOver event to show the Tooltip.
     */
    handleMouseOver: (event: any) => void;
    /**
     * @hidden
     */
    render(): JSX.Element;
    private handleBodyMousemove;
    private showToolTip;
    private isVisible;
    private position;
    private getTitle;
    private calloutClassName;
}
export {};
